SQL
    1. SQL의 개념 및 유형
            => 관계형 데이터베이스에서 데이터를 정의, 조작, 제어하기 위해 사용하는 언어
                = 데이터 정의어(DDL)
                    - 데이터 스키마를 설정하거나 수정하는 작업을 의미함
                    - CREATE, ALTER, DROP, RENAME, TRUNCATE
                = 데이터 조작어(DML)
                    - 데이터베이스 내의 인스턴스(레코드)를 다루는 작업을 의미함
                    - SELECT, INSERT, UPDATE, DELETE
                = 데이터 제어어(DCL)
                    - 사용자 계정을 생성하거나 권한을 부여하는 등 데이터베이스의 접근 및 사용을 관리하는 작업을 의미함
                    - GRANT, REVOKE
                = 트랜잭션 제어어
                    - 데이터의 일관성과 무결성을 보장하기 위해 작업을 트랜잭션 단위로 묶어서 관리하는 작업을 의미함
                    - COMMIT, ROLLBACK
            => SQL은 DDL, DML, DCL, TCL이 결합되어 SQL의 전체적인 문법을 형성
            => 영어에서 동명사, 전치사, to 부정사 등 다양한 문법 요소가 결합되어 하나의 언어 체계를 이루는 것과 유사한 원리
    2. SQL 기본 작성 규칙
        1) 문장 종료 : SQL 문장은 ;으로 종료한다
        2) 대소문자 구분 : 명령어, 객체명, 변수명은 대소문자를 구분하지 않는다 => 데이터 값은 대소문자를 구분한다
        3) 문자열 및 날짜 값 : 문자열(String)과 날짜(Date) 값은 작은따옴표('')를 사용한다
        4) 공백과 줄 바꿈 : 단어와 단어 사이는 공백 또는 줄 바꿈으로 구분한다
        5) 주석문 : 코드의 실행에는 영향을 미치지 않지만, 가독성을 높이고 내용을 설명하기 위해 사용된다
            => 단일행 주석 : 주석 내용 앞에 -- 입력
            => 다중행 주석 : 주석 내용의 시작에 /*, 끝에 */ 입력

===========================================================================================================================================================================================================

SELECT 문
    1. SELECT 문 : 데이터베이스 테이블에서 원하는 데이터를 조회할 때 사용하는 명령어
        => SELECT * => SQL에서 테이블의 모든 칼럼을 조회할 때 사용 => 예) SELECT * FROM player;
        => 특정 칼럼 조회 => player 테이블에서 player_id, player_name, team_id, position 칼럼만을 조회하고자 한다면 => 예) SELECT player_id, player_name, team_id, position FROM player;
    2. ALL과 DISTINCT
        1) ALL
            = SELECT와 칼럼 사이에 ALL을 명시하면 중복 데이터를 포함하여 모든 데이터를 출력
            = ALL은 기본값으로, 별도로 명시하지 않아도 SELECT만 사용하면 SELECT ALL로 처리
            => 예) SELECT ALL position FROM player; => SELECT position FROM player;
        2) DISTINCT
            = 중복 데이터를 제거하고, 고유한 데이터만 출력한다(중복 데이터를 1건으로 출력)
            = DISTINCT는 SELECT 키워드 바로 뒤, 첫 번째 칼럼 앞에 위치해야 한다
            = DISTINCT는 단순히 하나의 칼럼만 중복 체크를 하는 것이 아니라, 지정된 여러 칼럼의 조합을 기준으로 중복을 판단한다
            = DISTINCT는 NULL 값을 하나의 고유한 값으로 간주 => position 칼럼에 여러 개의 NULL 값이 있더라도 하나의 NULL 값만 출력된다
            => 예) SELECT DISTINCT POSITION FROM PLAYERS;
    3. 각종 SELECT 문법
        1) FROM 절
            = FROM 절은 데이터를 조회할 테이블을 지정하는 구문 => SELECT~ FROM~;와 같이 SELECT 문에서 반드시 필요한 요소
            => 예) SELECT 5+4 FROM PLAYER => 가능 / SELECT 5+4 => 에러 발생
        2) DUAL 테이블
            = 앞선 예에서 SELECT 5+4 FROM PLAYER;를 실행하면, 테이블의 행 수만큼 5+4의 결과가 반복 출력된다 => PLAYER 테이블의 데이터를 사용하지는 않지만 테이블의 행 수만큼 반복 수행
            => 단순히 5+4의 값을 확인하고 싶지만 FROM 절에 사용할 적절한 테이블이 없다 => DUAL 테이블 활용
            => 오라클에 내장된 테이블 => 하나의 행과 하나의 칼럼 => 칼럼의 이름은 DUMMY, 값은 x
            => 테스트나 임시 연산을 위해 만들어짐 => 산술 연산의 FROM 절에 사용 시 1개의 결과만을 출력 => DUAL 테이블은 1개의 행만 가지고 있다
        3) 별칭
